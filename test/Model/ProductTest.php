<?php
/**
 * ProductTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Kaemo\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Kaemo API
 *
 * Public api for Kaemo back office
 *
 * OpenAPI spec version: 1.0.203
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Kaemo\Client;

/**
 * ProductTest Class Doc Comment
 *
 * @category    Class */
// * @description Product
/**
 * @package     Kaemo\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ProductTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test "Product"
     */
    public function testProduct()
    {

    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {

    }

    /**
     * Test attribute "reference"
     */
    public function testPropertyReference()
    {

    }

    /**
     * Test attribute "date_from"
     */
    public function testPropertyDateFrom()
    {

    }

    /**
     * Test attribute "date_to"
     */
    public function testPropertyDateTo()
    {

    }

    /**
     * Test attribute "price"
     */
    public function testPropertyPrice()
    {

    }

    /**
     * Test attribute "position"
     */
    public function testPropertyPosition()
    {

    }

    /**
     * Test attribute "active"
     */
    public function testPropertyActive()
    {

    }

    /**
     * Test attribute "available_for_order"
     */
    public function testPropertyAvailableForOrder()
    {

    }

    /**
     * Test attribute "date_add"
     */
    public function testPropertyDateAdd()
    {

    }

    /**
     * Test attribute "date_upd"
     */
    public function testPropertyDateUpd()
    {

    }

    /**
     * Test attribute "id_category_default"
     */
    public function testPropertyIdCategoryDefault()
    {

    }

    /**
     * Test attribute "images"
     */
    public function testPropertyImages()
    {

    }

    /**
     * Test attribute "attributes"
     */
    public function testPropertyAttributes()
    {

    }

    /**
     * Test attribute "meta_description"
     */
    public function testPropertyMetaDescription()
    {

    }

    /**
     * Test attribute "meta_keywords"
     */
    public function testPropertyMetaKeywords()
    {

    }

    /**
     * Test attribute "meta_title"
     */
    public function testPropertyMetaTitle()
    {

    }

    /**
     * Test attribute "link_rewrite"
     */
    public function testPropertyLinkRewrite()
    {

    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {

    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {

    }

    /**
     * Test attribute "description_short"
     */
    public function testPropertyDescriptionShort()
    {

    }

    /**
     * Test attribute "tags"
     */
    public function testPropertyTags()
    {

    }

    /**
     * Test attribute "can_buy"
     */
    public function testPropertyCanBuy()
    {

    }

    /**
     * Test attribute "available_in_subscriptions"
     */
    public function testPropertyAvailableInSubscriptions()
    {

    }

    /**
     * Test attribute "duration"
     */
    public function testPropertyDuration()
    {

    }

    /**
     * Test attribute "sub"
     */
    public function testPropertySub()
    {

    }

}
